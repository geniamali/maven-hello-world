name: myapp-ci-cd

on:
  push:
    branches:
      - master

jobs:
  build_containerize_and_run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '8'

    - name: Bump patch version
      run: |
        POM_FILE="myapp/pom.xml"
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -f $POM_FILE)
        IFS='.' read -r -a version_parts <<< "$current_version"
        version_parts[2]=$((version_parts[2] + 1))
        new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
        mvn versions:set -DnewVersion=$new_version -f $POM_FILE
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Push new pom
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add myapp/pom.xml
        git commit -m "Bump version to ${{ env.new_version }}"
        git push origin master
    
    - name: Compile & Package java code
      run: mvn -B package -f myapp/pom.xml

    - name: Store artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp
        path: target/*.jar

    - name: Make dir for aritfact to be used in the build
      run: mkdir -p target/build

    - name: Download the artifact
      uses: actions/download-artifact@v2
      with:
        name: myapp
        path: target/build
      
    - name: Build Docker image
      id: build_image
      run: |
        DOCKERHUB_REPO="geniamali/myapp"
        docker build --file myapp/Dockerfile -t ${DOCKERHUB_REPO}:${{ env.new_version }} -t ${DOCKERHUB_REPO}:latest .
        echo "repo=$DOCKERHUB_REPO" >> $GITHUB_ENV

    - name: DockerHub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push to Docker Hub
      run: |
        docker push ${{ env.repo }}:latest
        docker push ${{ env.repo }}:${{ env.new_version }}

    - name: Pull and run Docker image
      run: |
        docker pull ${{ env.repo }}:latest
        docker run --rm ${{ env.repo }}:latest
